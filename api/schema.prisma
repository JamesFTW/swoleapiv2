//
// Autogenerated by `prisma-import`
// Any modifications will be overwritten on subsequent runs.
//

//
// schema.config.prisma
//

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

//
// Session.prisma
//

model Session {
  sid    String   @id @db.VarChar(128)
  sess   Json     @db.Json
  expire DateTime @db.Timestamp()

  @@map("session")
}

//
// Exercises.prisma
//

model Exercises {
  exerciseId       Int      @id @unique @default(autoincrement())
  createdAt        DateTime @default(now()) @db.Timestamp(6)
  updatedAt        DateTime @updatedAt
  exerciseName     String   @unique
  targetMuscle     String
  secondaryMuscles Json?
  video            String

  userExercises UserExercises[]
}

//
// UserExercises.prisma
//

model UserExercises {
  userExerciseID Int      @id @unique @default(autoincrement())
  exerciseId     Int
  userId         String
  createdAt      DateTime @default(now()) @db.Timestamp(6)
  updatedAt      DateTime @updatedAt
  weightMoved    Int
  reps           Int

  user     Users     @relation(fields: [userId], references: [userId])
  exercise Exercises @relation(fields: [exerciseId], references: [exerciseId])

  @@index([userId])
  @@index([exerciseId])
}

//
// Users.prisma
//

model Users {
  profilePhoto String?
  bio          String?
  firstName    String?
  lastName     String?
  salt         String
  userId       String   @id @unique @default(uuid())
  userName     String   @unique
  email        String   @unique
  password     String   @db.VarChar(60)
  createdAt    DateTime @default(now()) @db.Timestamp(6)
  updatedAt    DateTime @updatedAt

  userExercises UserExercises[]
}
